*** Notes on Git and Github ***

<---------------------------- LESSON 1 ----------------------------->
                      Navigating a Commit History

Compare files:
	- Windows: FC old-file.html new-file.html
	- Mac + Linux: diff -u old-file.html new-file.html

-> How did viewing a diff between two versions of a file help you see the bug that
 was introduced?
	It pinpoints exactly which lines are different, so you dont have to check the 
whole file for differences, and you can just focus on those lines.

-> How could having easy access to the entire history of a file make you a better
programmer in the long term?
	It saves you time correcting past mistakes, so you spend more time learning
about programming, and less times going back over your old code and looking for
files that you used before but cant find.

-> What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
	You can choose when to commit, which is important because you may have several
parts of the program in the works, so you dont want to commit your work until you've
fixed all the parts correctly. It also allows you to keep a functioning version of 
your product, so you dont need to worry about everything crashing one day because
you can always just go back to the previous functioning version.

-> Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
	This is because in a program a lot of times you have many files interacting 
with each other, whereas in a google doc everything is isolated so you dont need 
to save multiple files.

-> How can you use the commands git log and git diff to view the history of files?
	Git log lets you see a history of the commits made, so combining that with
git diff you can see who made changes, when, and what changes...so if they 
messed up you can go directly to their desk to yell at them! Nah jk, be nice.


-> How might using version control make you more confident to make changes that
could break something?
	Because you have the backup functioning version, so worst case scenario you're 
just wasting your time (which may sound bad, but at least you're not wasting every-
one elses too). You can be more of a risk taker!!!

-> Now that you have your workspace set up, what do you want to try using Git for?
	I really need to get a private git account, I use git a lot with website clients
to show them the live version of their site, it's also very useful for checking 
loading times on websites.



